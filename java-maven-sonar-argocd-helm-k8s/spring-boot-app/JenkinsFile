pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
       // git branch: 'main', url: 'https://github.com/Gmmarcal/aws-deploy.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
 stage('OWASP Dependency-Check Scan') {
            steps {
                dependencyCheck additionalArguments: sh '/home/ubuntu/dependency-check/bin/dependency-check.sh--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'Dependency Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
stage('Build and Push Docker Image') {
    environment {
        DOCKER_IMAGE = "marcalx/ultimate-cicd:${BUILD_NUMBER}"
    }
    steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'

            // Recupera o token do Jenkins Credentials
            withCredentials([string(credentialsId: 'docker-token', variable: 'DOCKER_TOKEN')]) {
                sh 'echo $DOCKER_TOKEN | docker login -u marcalx --password-stdin'

                def dockerImage = docker.image("${DOCKER_IMAGE}")
                dockerImage.push()

                // Faz logout para evitar exposição do token no ambiente
                sh 'docker logout'
            }
        }
    }
}
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "aws-deploy"
            GIT_USER_NAME = "gmmarcal"
        }
        steps {
            withCredentials([string(credentialsId: 'tokenjenkinsgit', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "gmmarcal2@gmail.com"
                    git config user.name "gmmarcal"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i -e "s/ultimate-cicd.*/ultimate-cicd:${BUILD_NUMBER}/g"  java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}

